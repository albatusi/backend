  // schema.prisma

  generator client {
  Â  provider = "prisma-client-js"
  }

  // ðŸŽ¯ CAMBIO: AsegÃºrate de que estÃ¡s usando 'mysql' como proveedor.
  datasource db {
  Â  provider = "mysql"
  Â  urlÂ  Â  Â  = env("DATABASE_URL")
  }

  // ===================================
  // ðŸš— NUEVO MODELO PARA VEHICLES
  // ===================================
  model Vehicle {
  Â  // id: Usado en el frontend como 'id'
  Â  idÂ  Â  Â  Â  Â  IntÂ  Â  Â  @id @default(autoincrement())
  Â Â 
  Â  // name: Nombre del propietario
  Â  nameÂ  Â  Â  Â  StringÂ  Â @db.VarChar(255)
  Â Â 
  Â  // plate: Placa del vehÃ­culo, debe ser Ãºnica
  Â  plateÂ  Â  Â  Â StringÂ  Â @unique @db.VarChar(255)
  Â Â 
  Â  // type: Tipo de vehÃ­culo (carro, moto, bicicleta)
  Â  // âœ… CORRECCIÃ“N: Se agrega '?' para hacerlo opcional/NULLABLE.
  Â  typeÂ  Â  Â  Â  String? Â @db.VarChar(50) 
  Â Â 
  Â  // facePhoto: Almacena la Data URL de la imagen.Â 
  Â  // Usamos @db.Text para cadenas largas en MySQL.
  Â  facePhotoÂ  Â String?Â  @db.MediumText
  Â  // createdAt: Fecha de registro
  Â  createdAtÂ  Â DateTime @default(now())

  Â  // Mapear el nombre de la tabla en la base de datos (opcional, pero Ãºtil)
  Â  @@map("vehicles")
  }

  // ===================================
  // MODELOS EXISTENTES (USUARIOS y ROLES)
  // ... (El resto de modelos no se modifican)
  // ===================================
  model usuarios {
  Â  idUsuarioÂ  Â  Â  Â  Â  Â  Â IntÂ  Â  Â  @id @default(autoincrement())
  Â  nomUsuarioÂ  Â  Â  Â  Â  Â  StringÂ  Â @db.VarChar(255)
  Â  docUsuarioÂ  Â  Â  Â  Â  Â  StringÂ  Â @unique @db.VarChar(255)
  Â  emaUsuarioÂ  Â  Â  Â  Â  Â  StringÂ  Â @unique @db.VarChar(255)
  Â  rol_idUsuarioÂ  Â  Â  Â  Â IntÂ  Â  Â  @default(2)
  Â  fecha_creacionUsuario DateTime @default(now())
  Â  pasUsuarioÂ  Â  Â  Â  Â  Â  StringÂ  Â @db.VarChar(255)
  Â  photoUrlÂ  Â  Â  Â  Â  Â  Â  String?Â  @db.VarChar(255)
  Â  habilitado2FAÂ  Â  Â  Â  Â BooleanÂ  @default(false)
  Â  secret2FAÂ  Â  Â  Â  Â  Â  Â String?Â  @db.VarChar(255)
  Â  rolÂ  Â  Â  Â  Â  Â  Â  Â  Â  Â rolesÂ  Â  @relation(fields: [rol_idUsuario], references: [idRol])

  Â  @@index([rol_idUsuario], map: "usuarios_rol_idUsuario_fkey")
  }

  model roles {
  Â  idRolÂ  Â  IntÂ  Â  Â  @id @default(autoincrement())
  Â  nomRolÂ  Â StringÂ  Â @db.VarChar(255)
  Â  usuarios usuarios[]

  Â  @@map("roles")
  }